@page "/patients/{patientId}"

@inject HttpClient HttpClient
@inject NavigationManager NavigationManager

<h1>Patient Details</h1>

@if (patient == null)
{
    <p>Loading...</p>
}
else
{
    <div>
        <div class="form-group">
            <label for="nameInput">Name:</label>
            <input type="text" class="form-control" id="nameInput" @bind="@patient.Name" />
        </div>
        <div class="form-group">
            <label for="csiInput">CSI:</label>
            <input type="text" class="form-control" id="csiInput" @bind="@patient.CSI" />
        </div>
        <div class="form-group">
            <label for="idInput">ID:</label>
            <input type="text" class="form-control" id="idInput" @bind="@patient.Id" />
        </div>
        <div class="form-group">
            <label for="passwordInput">Password:</label>
            <input type="text" class="form-control" id="passwordInput" @bind="@patient.Password" />
        </div>
        <button @onclick="SavePatient" disabled="@(!IsDirty)">Save</button>
    </div>
}

@code {
    [Parameter]
    public string PatientId { get; set; }

    private Patient patient;
    private Patient originalPatient;
    private bool IsDirty => patient != null && !patient.Equals(originalPatient);

    protected override async Task OnInitializedAsync()
    {
        originalPatient = await GetPatientDetails(PatientId);
        patient = new Patient{
            Id = originalPatient.Id,
            Name = originalPatient.Name,
            CSI = originalPatient.CSI,
            Password = originalPatient.Password
        };
    }

    private async Task<Patient> GetPatientDetails(string patientId)
    {
        return await HttpClient.GetFromJsonAsync<Patient>($"https://localhost:7128/patients/{patientId}");
    }

    private async Task SavePatient()
    {
        var response = await HttpClient.PutAsJsonAsync($"https://localhost:7128/patients/{patient.Id}", patient);
    }

    public class Patient : IEquatable<Patient>
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public int CSI { get; set; }
        public string Password { get; set; }
        
        public bool Equals(Patient other)
        {
            return other != null &&
                   Id == other.Id &&
                   Name == other.Name &&
                   CSI == other.CSI &&
                   Password == other.Password;
        }
    }
}
